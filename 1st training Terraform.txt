To check existing issues, please visit: https://github.com/Azure/azure-cli/issues
PS C:\RG_Creation> az account show
Please run 'az login' to setup account.
PS C:\RG_Creation> az config unset core.allow_broker
Command group 'config' is experimental and under development. Reference and support levels: https://aka.ms/CLI_refstatus
PS C:\RG_Creation> az login
A web browser has been opened at https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize. Please continue the login in the web browser. If no web browser is a
vailable or if the web browser fails to open, use device code flow with `az login --use-device-code`.
[
  {
    "cloudName": "AzureCloud",
    "homeTenantId": "4290e7da-7cb6-4993-87c4-4e8cf3315bba",
    "id": "69dd90d1-d145-429d-98e6-6ea267c3d5c4",
    "isDefault": true,
    "managedByTenants": [],
    "name": "Azure subscription 1",
    "state": "Enabled",
    "tenantId": "4290e7da-7cb6-4993-87c4-4e8cf3315bba",
    "user": {
      "name": "jeypranav555@outlook.com",
      "type": "user"
    }
  }
]
PS C:\RG_Creation> az account show
{
  "environmentName": "AzureCloud",
  "homeTenantId": "4290e7da-7cb6-4993-87c4-4e8cf3315bba",
  "id": "69dd90d1-d145-429d-98e6-6ea267c3d5c4",
  "isDefault": true,
  "managedByTenants": [],
  "name": "Azure subscription 1",
  "state": "Enabled",
  "tenantId": "4290e7da-7cb6-4993-87c4-4e8cf3315bba",
  "user": {
    "name": "jeypranav555@outlook.com",
    "type": "user"
  }
}
PS C:\RG_Creation> .\terraform.exe init

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/azurerm from the dependency lock file
- Reusing previous version of hashicorp/random from the dependency lock file
- Using previously-installed hashicorp/azurerm v3.79.0
- Using previously-installed hashicorp/random v3.5.1

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
PS C:\RG_Creation> .\terraform.exe plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = (known after apply)
    }

  # random_pet.rg_name will be created
  + resource "random_pet" "rg_name" {
      + id        = (known after apply)
      + length    = 2
      + prefix    = "rg"
      + separator = "-"
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_group_name = (known after apply)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
PS C:\RG_Creation> .\terraform.exe apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = (known after apply)
    }

  # random_pet.rg_name will be created
  + resource "random_pet" "rg_name" {
      + id        = (known after apply)
      + length    = 2
      + prefix    = "rg"
      + separator = "-"
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_group_name = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

random_pet.rg_name: Creating...
random_pet.rg_name: Creation complete after 0s [id=rg-easy-gar]
azurerm_resource_group.rg: Creating...
azurerm_resource_group.rg: Creation complete after 1s [id=/subscriptions/69dd90d1-d145-429d-98e6-6ea267c3d5c4/resourceGroups/rg-easy-gar]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

resource_group_name = "rg-easy-gar"
PS C:\RG_Creation>

